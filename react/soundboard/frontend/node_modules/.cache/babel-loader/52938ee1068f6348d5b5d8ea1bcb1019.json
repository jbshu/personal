{"ast":null,"code":"import _classCallCheck from \"/home/jack/personal/react/soundboard/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jack/personal/react/soundboard/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jack/personal/react/soundboard/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jack/personal/react/soundboard/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jack/personal/react/soundboard/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jack/personal/react/soundboard/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jack/personal/react/soundboard/frontend/src/SoundboardSquare.js\";\nimport React, { Component } from \"react\";\nimport Slider from './components/Slider';\nimport \"./SoundboardSquare.css\";\nimport 'react-rangeslider/lib/index.css';\n\nvar SoundboardSquare =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SoundboardSquare, _Component);\n\n  function SoundboardSquare(props) {\n    var _this;\n\n    _classCallCheck(this, SoundboardSquare);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SoundboardSquare).call(this, props));\n    _this.state = {\n      soundURL: '',\n      fileName: '',\n      volume: 0.5,\n      speed: 1\n    };\n    _this.handleUploadSound = _this.handleUploadSound.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.volumeChange = _this.volumeChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.speedChange = _this.speedChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.playSound = _this.playSound.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SoundboardSquare, [{\n    key: \"handleUploadSound\",\n    value: function handleUploadSound(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      var data = new FormData();\n      data.append('file', this.uploadInput.files[0]);\n      data.append('filename', this.fileName.value);\n      this.setState({\n        fileName: this.fileName.value\n      }); //send data to node backend, save url in state\n\n      fetch('http://localhost:8000/upload', {\n        method: 'POST',\n        body: data\n      }).then(function (response) {\n        response.json().then(function (body) {\n          _this2.setState({\n            soundURL: \"http://localhost:8000/\".concat(body.file)\n          });\n        });\n      });\n      e.preventDefault();\n    } //used by Slider\n\n  }, {\n    key: \"volumeChange\",\n    value: function volumeChange(e) {\n      this.setState({\n        volume: parseFloat(e.target.value)\n      });\n    } //used by Slider\n\n  }, {\n    key: \"speedChange\",\n    value: function speedChange(e) {\n      this.setState({\n        speed: parseFloat(e.target.value)\n      });\n    }\n  }, {\n    key: \"playSound\",\n    value: function playSound() {\n      var audio = new Audio(this.state.soundURL);\n      audio.volume = this.state.volume;\n      audio.playbackRate = this.state.speed;\n      audio.play();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var chooser; //Only render upload dialogue if the square does not have a current sound\n      //TODO: add support for swapping sounds\n\n      if (this.state.fileName !== '') {\n        chooser = React.createElement(\"label\", {\n          id: \"sound-name-display\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, this.state.fileName);\n      } else {\n        chooser = React.createElement(\"div\", {\n          className: \"chooser\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"choose-sound-border\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          id: \"choose-sound-label\",\n          for: \"choose-sound\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Choose Sound\"), React.createElement(\"input\", {\n          id: \"choose-sound\",\n          type: \"file\",\n          ref: function ref(_ref) {\n            _this3.uploadInput = _ref;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"sound-name-border\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: \"sound-name\",\n          ref: function ref(_ref2) {\n            _this3.fileName = _ref2;\n          },\n          type: \"text\",\n          placeholder: \"Sound name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"upload-border\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          id: \"upload\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Upload\")));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"squareMain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"squareForm\",\n        onSubmit: this.handleUploadSound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, chooser, React.createElement(\"div\", {\n        className: \"controls-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"slider-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Slider, {\n        name: \"Volume\",\n        min: \"0\",\n        max: \"1\",\n        step: \"0.05\",\n        onChange: this.volumeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Slider, {\n        name: \"Speed\",\n        min: \"0.2\",\n        max: \"2\",\n        step: \"0.2\",\n        onChange: this.speedChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"play-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        id: \"play\",\n        onClick: this.playSound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return SoundboardSquare;\n}(Component);\n\n;\nexport default SoundboardSquare;","map":{"version":3,"sources":["/home/jack/personal/react/soundboard/frontend/src/SoundboardSquare.js"],"names":["React","Component","Slider","SoundboardSquare","props","state","soundURL","fileName","volume","speed","handleUploadSound","bind","volumeChange","speedChange","playSound","e","preventDefault","data","FormData","append","uploadInput","files","value","setState","fetch","method","body","then","response","json","file","parseFloat","target","audio","Audio","playbackRate","play","chooser","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Slider from './components/Slider';\nimport \"./SoundboardSquare.css\";\nimport 'react-rangeslider/lib/index.css';\n\nclass SoundboardSquare extends Component {\n  constructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state= {\n      soundURL: '',\n      fileName: '',\n      volume: 0.5,\n      speed: 1,\n\t\t};\n\n    this.handleUploadSound= this.handleUploadSound.bind(this);\n    this.volumeChange= this.volumeChange.bind(this);\n    this.speedChange= this.speedChange.bind(this);\n    this.playSound= this.playSound.bind(this);\n\t}\n\n\thandleUploadSound(e) {\n\t\te.preventDefault();\n\n\t\tconst data= new FormData();\n\t\tdata.append('file', this.uploadInput.files[0]);\n\t\tdata.append('filename', this.fileName.value);\n\n    this.setState( {fileName:this.fileName.value} );\n\n    //send data to node backend, save url in state\n\t\tfetch('http://localhost:8000/upload', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data,\n\t\t}).then((response) => {\n\t\t\tresponse.json().then((body) => {\n\t\t\t\tthis.setState({ soundURL: `http://localhost:8000/${body.file}` });\n\t\t\t});\n    });\n    \n    e.preventDefault();\n\t}\n\n  //used by Slider\n  volumeChange(e) {\n    this.setState( {volume: parseFloat(e.target.value)} );\n  }\n\n  //used by Slider\n  speedChange(e) {\n    this.setState( {speed: parseFloat(e.target.value)} );\n  }\n\n  playSound() {\n    var audio= new Audio(this.state.soundURL);\n    audio.volume= this.state.volume;\n    audio.playbackRate= this.state.speed;\n    audio.play();\n  }\n\n  render() {\n    let chooser;\n\n    //Only render upload dialogue if the square does not have a current sound\n    //TODO: add support for swapping sounds\n    if (this.state.fileName !== '') {\n      chooser= <label id=\"sound-name-display\">{this.state.fileName}</label>;\n    }\n    else {\n      chooser= <div className= \"chooser\">\n                  <div id=\"choose-sound-border\">\n                    <label id=\"choose-sound-label\" for=\"choose-sound\">Choose Sound</label>\n                      <input id=\"choose-sound\" type=\"file\" ref= {(ref) => { this.uploadInput= ref; }}/>\n                  </div>\n                  <div id=\"sound-name-border\">\n                    <input id= \"sound-name\" ref={(ref) => { this.fileName = ref; }} type=\"text\" placeholder=\"Sound name\"/>\n                  </div>\n                  <div id=\"upload-border\">\n                    <button id=\"upload\">Upload</button>\n                  </div>\n                </div>;  \n    }\n\n    return (\n      <div className=\"squareMain\">\n          <form className=\"squareForm\" onSubmit= {this.handleUploadSound}>\n          {chooser}\n            <div className=\"controls-container\">\n              <div id=\"slider-container\">\n                <Slider name=\"Volume\" min=\"0\" max=\"1\" step=\"0.05\" onChange={this.volumeChange} />\n                <Slider name=\"Speed\" min=\"0.2\" max=\"2\" step=\"0.2\" onChange={this.speedChange} />\n              </div>\n              <div id=\"play-border\">\n                <button type=\"button\" id=\"play\" onClick= {this.playSound}></button>\n              </div>\n            </div>\n          </form>\n               \n      </div>\n    );\n  }  \n};\n\n\nexport default SoundboardSquare;\n"]},"metadata":{},"sourceType":"module"}